/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package TA;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import org.w3c.dom.events.MouseEvent;

import java.sql.Connection;

/**
 *
 * @author USER
 */
public class pengubahdata extends javax.swing.JFrame {
    private Connection connection;
    private DefaultTableModel modelSongket;
    private DefaultTableModel modelBahan;
    private DefaultTableModel modelWarna;
    private DefaultTableModel modelEkspedisi;

    /**
     * Creates new form pengubahdata
     */
    public pengubahdata() {
        initComponents();
        try {
            // Memanggil koneksi hanya sekali ketika objek Utama dibuat
            this.connection = DatabaseConnection.getConnection();
            System.out.println("Koneksi berhasil!");
        } catch (SQLException e) {
            System.err.println("Gagal terhubung ke database: " + e.getMessage());
        }

        this.modelSongket = new DefaultTableModel();
        this.modelBahan = new DefaultTableModel();
        this.modelWarna = new DefaultTableModel();
        this.modelEkspedisi = new DefaultTableModel();
        setupTableModels();
        data();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        TF = new javax.swing.JTextField();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnTambah = new javax.swing.JButton();
        Combo = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        scrollSongket = new javax.swing.JScrollPane();
        tabelSongket = new javax.swing.JTable();
        scrollWarna = new javax.swing.JScrollPane();
        tabelWarna = new javax.swing.JTable();
        scrollBahan = new javax.swing.JScrollPane();
        tabelBahan = new javax.swing.JTable();
        scrollEkspedisi = new javax.swing.JScrollPane();
        tabelEkspedisi = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        btnUbah.setText("Ubah ");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus ");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        Combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnUbah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTambah))
                    .addComponent(TF))
                .addGap(24, 24, 24)
                .addComponent(Combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(112, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUbah)
                    .addComponent(btnHapus)
                    .addComponent(btnTambah))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        tabelSongket.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Songket"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelSongket.setColumnSelectionAllowed(true);
        tabelSongket.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelSongketMouseClicked(evt);
            }
        });
        scrollSongket.setViewportView(tabelSongket);
        tabelSongket.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        tabelWarna.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Warna"
            }
        ));
        tabelWarna.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelWarnaMouseClicked(evt);
            }
        });
        scrollWarna.setViewportView(tabelWarna);

        tabelBahan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bahan"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelBahan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelBahanMouseClicked(evt);
            }
        });
        scrollBahan.setViewportView(tabelBahan);

        tabelEkspedisi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ekspedisi"
            }
        ));
        tabelEkspedisi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelEkspedisiMouseClicked(evt);
            }
        });
        scrollEkspedisi.setViewportView(tabelEkspedisi);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollSongket, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollBahan, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollWarna, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollEkspedisi, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollBahan, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                    .addComponent(scrollWarna, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(scrollEkspedisi, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(scrollSongket, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(124, 124, 124))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

        private void setupTableModels() {
        // Setup model tabel untuk Songket
        modelSongket = (DefaultTableModel) tabelSongket.getModel();
        modelSongket.setColumnIdentifiers(new String[]{"Songket"});

        // Setup model tabel untuk Bahan
        modelBahan = (DefaultTableModel) tabelBahan.getModel();
        modelBahan.setColumnIdentifiers(new String[]{"Bahan"});

        // Setup model tabel untuk Warna
        modelWarna = (DefaultTableModel) tabelWarna.getModel();
        modelWarna.setColumnIdentifiers(new String[]{"Warna"});

        // Setup model tabel untuk Ekspedisi
        modelEkspedisi = (DefaultTableModel) tabelEkspedisi.getModel();
        modelEkspedisi.setColumnIdentifiers(new String[]{"Ekspedisi"});
    }

    private void data(){
        this.Combo.addItem("Songket");
        this.Combo.addItem("Bahan");
        this.Combo.addItem("Warna");
        this.Combo.addItem("Ekspedisi");

        String[][] queries = {
            {"select nama from songket", "Songket"},
            {"select nama from warna", "Warna"},
            {"select nama from bahan", "Bahan"},
            {"select nama from ekspedisi", "Ekspedisi"}
        };
        
        try {
            for (String[] queryData : queries) {
                String query = queryData[0];
                String comboType = queryData[1];
        
                try (PreparedStatement ps = connection.prepareStatement(query);
                    ResultSet rs = ps.executeQuery()) {
                    while (rs.next()) {
                        String nama = rs.getString("nama");
                        switch (comboType) {
                            case "Songket" -> addDataToSongket(nama);
                            case "Warna" -> addDataToWarna(nama);
                            case "Bahan" -> addDataToBahan(nama);
                            case "Ekspedisi" -> addDataToEkspedisi(nama);
                        }
                    }
                }
            }
        }catch (SQLException e) {
            System.err.println("Gagal memasukkan data ke combo atau tabel: " + e.getMessage());
        }
    }

    private void addDataToSongket(String isi){
        modelSongket.addRow(new Object[]{isi});
    }
    
    private void addDataToBahan(String isi){
        modelBahan.addRow(new Object[]{isi});
    }

    private void addDataToWarna(String isi){
        modelWarna.addRow(new Object[]{isi});
    }

    private void addDataToEkspedisi(String isi){
        modelEkspedisi.addRow(new Object[]{isi});
    }

        private void handleTableClick(JTable tabel, String selectedCategory) {
            int selectedRow = 0;
            switch (selectedCategory) {
                case "Songket":
                    selectedRow = tabelSongket.getSelectedRow();
                    TF.setText(tabelSongket.getValueAt(selectedRow, 0).toString());
                    break;
                case "Bahan":
                    selectedRow = tabelBahan.getSelectedRow();
                    TF.setText(tabelBahan.getValueAt(selectedRow, 0).toString());
                    break;
                case "Warna":
                selectedRow = tabelWarna.getSelectedRow();
                    TF.setText(tabelWarna.getValueAt(selectedRow, 0).toString());
                    break;
                case "Ekspedisi":
                selectedRow = tabelEkspedisi.getSelectedRow();
                    TF.setText(tabelEkspedisi.getValueAt(selectedRow, 0).toString());
                    break;
            }
    }

    private void updateIsi(String pilih) {
        int selectedRow = 0;
        String isi = TF.getText();
        switch (pilih) {
            case "Songket" -> {
                selectedRow = tabelSongket.getSelectedRow();
                String query1 = "UPDATE songket SET nama = ? WHERE nama = ?";
                try (PreparedStatement stmt = connection.prepareStatement(query1)) {
                    stmt.setString(1, isi);
                    stmt.setString(2, tabelSongket.getValueAt(selectedRow, 0).toString());
                    stmt.executeUpdate();
                }catch (SQLException e) {
                    System.err.println("Gagal memperbarui data detail pesanan: " + e.getMessage());
                }
            }
            case "Bahan" -> {
                selectedRow = tabelBahan.getSelectedRow();
                String query1 = "UPDATE bahan SET nama = ? WHERE nama = ?";
                try (PreparedStatement stmt = connection.prepareStatement(query1)) {
                    stmt.setString(1, isi);
                    stmt.setString(2, tabelBahan.getValueAt(selectedRow, 0).toString());
                    stmt.executeUpdate();
                }catch (SQLException e) {
                    System.err.println("Gagal memperbarui data detail pesanan: " + e.getMessage());
                }
            }
            case "Warna" -> {
                selectedRow = tabelWarna.getSelectedRow();
                String query1 = "UPDATE warna SET nama = ? WHERE nama = ?";
                try (PreparedStatement stmt = connection.prepareStatement(query1)) {
                    stmt.setString(1, isi);
                    stmt.setString(2, tabelWarna.getValueAt(selectedRow, 0).toString());
                    stmt.executeUpdate();
                }catch (SQLException e) {
                    System.err.println("Gagal memperbarui data detail pesanan: " + e.getMessage());
                }
            }
            case "Ekspedisi" -> {
                selectedRow = tabelEkspedisi.getSelectedRow();
                String query1 = "UPDATE ekspedisi SET nama = ? WHERE nama = ?";
                try (PreparedStatement stmt = connection.prepareStatement(query1)) {
                    stmt.setString(1, isi);
                    stmt.setString(2, tabelEkspedisi.getValueAt(selectedRow, 0).toString());
                    stmt.executeUpdate();
                }catch (SQLException e) {
                    System.err.println("Gagal memperbarui data detail pesanan: " + e.getMessage());
                }
            }
        }
    }

    private void kosongkan(){
        TF.setText("t");
        tabelSongket.clearSelection();
        tabelBahan.clearSelection();
        tabelEkspedisi.clearSelection();
        tabelWarna.clearSelection();
    }

    private void ComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboActionPerformed

    private void tabelSongketMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelSongketMouseClicked
        // if (tabelBahan.getSelectedRow() == -1 || tabelEkspedisi.getSelectedRow() == -1 || tabelWarna.getSelectedRow() == -1) { // Tidak ada baris yang dipilih
        //     tabelSongket.clearSelection();        // Hapus seleksi
        // }
        String selectedCategory = (String) Combo.getSelectedItem();
        handleTableClick(tabelSongket, selectedCategory);
    }//GEN-LAST:event_tabelSongketMouseClicked

    private void tabelBahanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelBahanMouseClicked
        // if (tabelSongket.getSelectedRow() == -1 || tabelEkspedisi.getSelectedRow() == -1 || tabelWarna.getSelectedRow() == -1) { // Tidak ada baris yang dipilih
        //     tabelBahan.clearSelection();        // Hapus seleksi
        // }
        String selectedCategory = (String) Combo.getSelectedItem();
        handleTableClick(tabelBahan, selectedCategory);
    }//GEN-LAST:event_tabelBahanMouseClicked

    private void tabelWarnaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelWarnaMouseClicked
        // if (tabelBahan.getSelectedRow() == -1 || tabelEkspedisi.getSelectedRow() == -1 || tabelSongket.getSelectedRow() == -1) { // Tidak ada baris yang dipilih
        //     tabelWarna.clearSelection();        // Hapus seleksi
        // }
        String selectedCategory = (String) Combo.getSelectedItem();
        handleTableClick(tabelWarna, selectedCategory);
    }//GEN-LAST:event_tabelWarnaMouseClicked

    private void tabelEkspedisiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelEkspedisiMouseClicked
        // if (tabelBahan.getSelectedRow() == -1 || tabelSongket.getSelectedRow() == -1 || tabelWarna.getSelectedRow() == -1) { // Tidak ada baris yang dipilih
        //     tabelEkspedisi.clearSelection();        // Hapus seleksi
        // }
        String selectedCategory = (String) Combo.getSelectedItem();
        handleTableClick(tabelEkspedisi, selectedCategory);
    }//GEN-LAST:event_tabelEkspedisiMouseClicked

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        String selectedCategory = (String) Combo.getSelectedItem();
        updateIsi(selectedCategory);
        kosongkan();
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTambahActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pengubahdata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pengubahdata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pengubahdata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pengubahdata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pengubahdata().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Combo;
    private javax.swing.JTextField TF;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnUbah;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane scrollBahan;
    private javax.swing.JScrollPane scrollEkspedisi;
    private javax.swing.JScrollPane scrollSongket;
    private javax.swing.JScrollPane scrollWarna;
    private javax.swing.JTable tabelBahan;
    private javax.swing.JTable tabelEkspedisi;
    private javax.swing.JTable tabelSongket;
    private javax.swing.JTable tabelWarna;
    // End of variables declaration//GEN-END:variables
}
